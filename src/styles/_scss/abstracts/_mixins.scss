/*Breakpoints*/
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs-phones' {
    @media (max-width: 300px) {
      @content;
    }
  }
  @if $breakpoint == 'phones' {
    @media (max-width: 600px) {
      @content;
    }
  }
  @if $breakpoint == 'tablets' {
    @media (max-width: 900px) {
      @content;
    }
  } @else if $breakpoint == 'laptops' {
    @media (max-width: 1200px) {
      @content;
    }
  } @else if $breakpoint == 'desktops' {
    @media (max-width: 1600px) {
      @content;
    }
  }
}

// Reduced Media Motion for animations
@mixin reducedMotionAnimation($animationName) {
  @media (prefers-reduced-motion: reduce) {
    #{$animationName} {
      animation: none !important;
    }
  }
}

// Transition
@mixin transition($v1) {
  -webkit-transition: all $v1 ease-in-out;
  -moz-transition: all $v1 ease-in-out;
  -o-transition: all $v1 ease-in-out;
  transition: all $v1 ease-in-out;
}

@mixin translate($v1, $v2) {
  -webkit-transform: translate($v1, $v2);
  -moz-transform: translate($v1, $v2);
  -o-transform: translate($v1, $v2);
  transform: translate($v1, $v2);
}

@mixin scale($v1) {
  -webkit-transform: scale($v1);
  -moz-transform: scale($v1);
  -o-transform: scale($v1);
  transform: scale($v1);
}

// Animations
@mixin fade(
  $name,
  $translateY,
  $translateX,
  $animationDuration,
  $animationDelay
) {
  @keyframes #{$name} {
    0% {
      -webkit-transform: translateY(#{$translateY}) translateX(#{$translateX});
      -moz-transform: translateY(#{$translateY}) translateX(#{$translateX});
      -ms-transform: translateY(#{$translateY}) translateX(#{$translateX});
      -o-transform: translateY(#{$translateY}) translateX(#{$translateX});
      transform: translateY(#{$translateY}) translateX(#{$translateX});
      opacity: 0;
      filter: blur(15px);
    }
    100% {
      -webkit-transform: translate(0, 0);
      -moz-transform: translate(0, 0);
      -ms-transform: translate(0, 0);
      -o-transform: translate(0, 0);
      transform: translate(0, 0);
      opacity: 1;
      filter: blur(0);
    }
  }

  animation: #{$name} $animationDuration $animationDelay linear forwards;
}

@mixin appearScale(
  $name,
  $scale,
  $opacity,
  $animationDuration,
  $animationDelay
) {
  @keyframes #{$name} {
    0% {
      -webkit-transform: scale(#{$scale});
      -moz-transform: scale(#{$scale});
      -ms-transform: scale(#{$scale});
      -o-transform: scale(#{$scale});
      transform: scale(#{$scale});
      opacity: $opacity;
      filter: blur(15px);
    }
    100% {
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
      -ms-transform: scale(1);
      -o-transform: scale(1);
      transform: scale(1);
      opacity: 1;
      filter: blur(0);
    }
  }

  animation: #{$name} $animationDuration $animationDelay linear forwards;
}
